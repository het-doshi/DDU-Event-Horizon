{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hetdo\\\\Desktop\\\\ddu blog\\\\frontend\\\\src\\\\components\\\\CreatePost.jsx\";\nimport React from \"react\";\nimport { Form, Label, Input, FormGroup, Button } from \"reactstrap\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CreatePost() {\n  const submitHandler = event => {\n    event.preventDefault();\n    const title = event.target.title.value;\n    const description = event.target.description.value;\n\n    // Convert eventImage to byte[]\n    const eventImageFile = event.target.eventImage.files[0];\n    let eventImage = null;\n    if (eventImageFile) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const arrayBuffer = reader.result;\n        eventImage = new Uint8Array(arrayBuffer);\n\n        // Convert qrImage to byte[]\n        const qrImageFile = event.target.qrImage.files[0];\n        let qrImage = null;\n        if (qrImageFile) {\n          const qrReader = new FileReader();\n          qrReader.onload = e => {\n            const qrArrayBuffer = qrReader.result;\n            qrImage = new Uint8Array(qrArrayBuffer);\n\n            // Send the data to the server\n            axios.post('http://localhost:3000/posts', {\n              title,\n              description,\n              eventImage,\n              qrImage\n            }).then(response => {\n              console.log(response);\n            }).catch(error => {\n              console.log(error);\n            });\n          };\n          qrReader.readAsArrayBuffer(qrImageFile);\n        }\n      };\n      reader.readAsArrayBuffer(eventImageFile);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      style: {\n        width: \"900px\",\n        marginTop: \"50px\",\n        marginLeft: \"280px\"\n      },\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"title\",\n          name: \"title\",\n          placeholder: \"Enter your title\",\n          type: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"description\",\n          placeholder: \"Write your description\",\n          name: \"description\",\n          type: \"textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"eventImage\",\n          children: \"Upload Event Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"eventImage\",\n          name: \"eventImage\",\n          type: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          for: \"qrImage\",\n          children: \"Upload QR Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"qrImage\",\n          name: \"qrImage\",\n          type: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"success\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","Form","Label","Input","FormGroup","Button","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","CreatePost","submitHandler","event","preventDefault","title","target","value","description","eventImageFile","eventImage","files","reader","FileReader","onload","e","arrayBuffer","result","Uint8Array","qrImageFile","qrImage","qrReader","qrArrayBuffer","post","then","response","console","log","catch","error","readAsArrayBuffer","children","style","width","marginTop","marginLeft","onSubmit","for","fileName","_jsxFileName","lineNumber","columnNumber","id","name","placeholder","type","color","_c","$RefreshReg$"],"sources":["C:/Users/hetdo/Desktop/ddu blog/frontend/src/components/CreatePost.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Form, Label, Input, FormGroup, Button } from \"reactstrap\";\r\nimport axios from \"axios\";\r\n\r\nfunction CreatePost() {\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const title = event.target.title.value;\r\n    const description = event.target.description.value;\r\n    \r\n    // Convert eventImage to byte[]\r\n    const eventImageFile = event.target.eventImage.files[0];\r\n    let eventImage = null;\r\n    if (eventImageFile) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const arrayBuffer = reader.result;\r\n        eventImage = new Uint8Array(arrayBuffer);\r\n        \r\n        // Convert qrImage to byte[]\r\n        const qrImageFile = event.target.qrImage.files[0];\r\n        let qrImage = null;\r\n        if (qrImageFile) {\r\n          const qrReader = new FileReader();\r\n          qrReader.onload = (e) => {\r\n            const qrArrayBuffer = qrReader.result;\r\n            qrImage = new Uint8Array(qrArrayBuffer);\r\n\r\n            // Send the data to the server\r\n            axios.post('http://localhost:3000/posts', { title, description, eventImage, qrImage })\r\n              .then((response) => {\r\n                console.log(response);\r\n              })\r\n              .catch((error) => {\r\n                console.log(error);\r\n              });\r\n          };\r\n          qrReader.readAsArrayBuffer(qrImageFile);\r\n        }\r\n      };\r\n      reader.readAsArrayBuffer(eventImageFile);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form style={{ width: \"900px\", marginTop: \"50px\", marginLeft: \"280px\" }} onSubmit={submitHandler}>\r\n        <FormGroup>\r\n          <Label for=\"title\">Title</Label>\r\n          <Input id=\"title\" name=\"title\" placeholder=\"Enter your title\" type=\"input\" />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"description\">Description</Label>\r\n          <Input id=\"description\" placeholder=\"Write your description\" name=\"description\" type=\"textarea\" />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"eventImage\">Upload Event Image</Label>\r\n          <Input id=\"eventImage\" name=\"eventImage\" type=\"file\" />\r\n          <Label for=\"qrImage\">Upload QR Image</Label>\r\n          <Input id=\"qrImage\" name=\"qrImage\" type=\"file\" />\r\n        </FormGroup>\r\n        <Button color=\"success\" type=\"submit\">Submit</Button>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CreatePost;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hetdo\\\\Desktop\\\\ddu blog\\\\frontend\\\\src\\\\components\\\\Allpost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Header from \"./Header\";\nimport PublicPost from \"./PublicPost\";\nimport { Button } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Allpost() {\n  _s();\n  const [publicPosts, setPublicPosts] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:3000/posts`).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setPublicPosts(data);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"admin\",\n      children: \"Admin login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), publicPosts.map(publicPost => /*#__PURE__*/_jsxDEV(PublicPost, {\n      id: publicPost.id,\n      title: publicPost.title,\n      description: publicPost.description,\n      timeStamp: publicPost.timeStamp,\n      eventImage: publicPost.eventImage,\n      qrImage: publicPost.qrImage\n    }, publicPost.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Allpost, \"nMMFCyiAUiiwz/lclX9ZhXKGwfM=\");\n_c = Allpost;\nexport default Allpost;\nvar _c;\n$RefreshReg$(_c, \"Allpost\");","map":{"version":3,"names":["React","useEffect","useState","Header","PublicPost","Button","jsxDEV","_jsxDEV","Allpost","_s","publicPosts","setPublicPosts","fetch","then","response","ok","Error","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","publicPost","id","title","description","timeStamp","eventImage","qrImage","_c","$RefreshReg$"],"sources":["C:/Users/hetdo/Desktop/ddu blog/frontend/src/components/Allpost.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Header from \"./Header\";\r\nimport PublicPost from \"./PublicPost\";\r\nimport { Button } from 'reactstrap';\r\n\r\nfunction Allpost() {\r\n\r\n  const [publicPosts, setPublicPosts] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    fetch(`http://localhost:3000/posts`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setPublicPosts(data); \r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data:', error);\r\n      });\r\n  }); \r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      <Header />\r\n      <Button className='admin'>Admin login</Button>\r\n      <br />\r\n      {publicPosts.map((publicPost) => (\r\n        <PublicPost\r\n          key={publicPost.id}\r\n          id={publicPost.id}\r\n          title={publicPost.title}\r\n          description={publicPost.description}\r\n          timeStamp={publicPost.timeStamp}\r\n          eventImage={publicPost.eventImage}\r\n          qrImage={publicPost.qrImage}\r\n        />\r\n      ))}\r\n      <br />\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Allpost;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,MAAM,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAEjB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACdW,KAAK,CAAE,6BAA4B,CAAC,CACjCC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACdP,cAAc,CAACO,IAAI,CAAC;IACtB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,CAAC;EAEF,oBACEb,OAAA;IAAKe,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BhB,OAAA,CAACJ,MAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVpB,OAAA,CAACF,MAAM;MAACiB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9CpB,OAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACLjB,WAAW,CAACkB,GAAG,CAAEC,UAAU,iBAC1BtB,OAAA,CAACH,UAAU;MAET0B,EAAE,EAAED,UAAU,CAACC,EAAG;MAClBC,KAAK,EAAEF,UAAU,CAACE,KAAM;MACxBC,WAAW,EAAEH,UAAU,CAACG,WAAY;MACpCC,SAAS,EAAEJ,UAAU,CAACI,SAAU;MAChCC,UAAU,EAAEL,UAAU,CAACK,UAAW;MAClCC,OAAO,EAAEN,UAAU,CAACM;IAAQ,GANvBN,UAAU,CAACC,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOnB,CACF,CAAC,eACFpB,OAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNpB,OAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClB,EAAA,CAxCQD,OAAO;AAAA4B,EAAA,GAAP5B,OAAO;AA0ChB,eAAeA,OAAO;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hetdo\\\\Desktop\\\\ddu blog\\\\frontend\\\\src\\\\components\\\\Home.jsx\",\n  _s = $RefreshSig$();\n// Home.js\nimport React, { useEffect, useState } from 'react';\nimport { Button } from 'reactstrap';\nimport { useNavigate } from 'react-router-dom';\nimport Post from \"./post\";\nimport Header from \"./components/Header\";\nimport './home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetch('http://localhost:3000/posts').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setPosts(data);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []); // Ensure that the effect runs only once by passing an empty dependency array\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [\"Header\", /*#__PURE__*/_jsxDEV(Button, {\n      color: \"success\",\n      onClick: () => navigate('/CreatePost'),\n      className: \"createpost\",\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      title: post.title,\n      description: post.description,\n      timeStamp: post.timeStamp,\n      eventImage: post.eventImage,\n      qrImage: post.qrImage\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"wlX5Q2vHIOaliHXiQZ2fNKb4Q3U=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Button","useNavigate","Post","Header","jsxDEV","_jsxDEV","Home","_s","posts","setPosts","navigate","fetch","then","response","ok","Error","json","data","catch","error","console","className","children","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","post","title","description","timeStamp","eventImage","qrImage","id","_c","$RefreshReg$"],"sources":["C:/Users/hetdo/Desktop/ddu blog/frontend/src/components/Home.jsx"],"sourcesContent":["// Home.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Post from \"./post\";\r\nimport Header from \"./components/Header\";\r\nimport './home.css'\r\n\r\nfunction Home() {\r\n  const [posts, setPosts] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:3000/posts')\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setPosts(data); \r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data:', error);\r\n      });\r\n  }, []); // Ensure that the effect runs only once by passing an empty dependency array\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      Header\r\n      <Button color=\"success\" onClick={() => navigate('/CreatePost')} className='createpost'>\r\n        Create Post\r\n      </Button>\r\n      {posts.map((post) => (\r\n        <Post\r\n          key={post.id}\r\n          title={post.title}\r\n          description={post.description}\r\n          timeStamp={post.timeStamp}\r\n          eventImage={post.eventImage}\r\n          qrImage={post.qrImage}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,YAAY;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAO,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACda,KAAK,CAAC,6BAA6B,CAAC,CACjCC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACdR,QAAQ,CAACQ,IAAI,CAAC;IAChB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEd,OAAA;IAAKgB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,GAAC,QAE9B,eAAAjB,OAAA,CAACL,MAAM;MAACuB,KAAK,EAAC,SAAS;MAACC,OAAO,EAAEA,CAAA,KAAMd,QAAQ,CAAC,aAAa,CAAE;MAACW,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAEvF;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRpB,KAAK,CAACqB,GAAG,CAAEC,IAAI,iBACdzB,OAAA,CAACH,IAAI;MAEH6B,KAAK,EAAED,IAAI,CAACC,KAAM;MAClBC,WAAW,EAAEF,IAAI,CAACE,WAAY;MAC9BC,SAAS,EAAEH,IAAI,CAACG,SAAU;MAC1BC,UAAU,EAAEJ,IAAI,CAACI,UAAW;MAC5BC,OAAO,EAAEL,IAAI,CAACK;IAAQ,GALjBL,IAAI,CAACM,EAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMb,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACrB,EAAA,CAtCQD,IAAI;EAAA,QAEML,WAAW;AAAA;AAAAoC,EAAA,GAFrB/B,IAAI;AAwCb,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}